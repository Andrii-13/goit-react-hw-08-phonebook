{"version":3,"file":"static/js/55.4bb822e7.chunk.js","mappings":"kQAEaA,EAFeC,EAAQ,MAA5BC,QAEwBC,KAAV,qC,SCUtB,EATkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACN,EAAD,UAAYM,GAAhB,GAGpB,E,UCRYC,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EAC1BC,EAAyB,SAAAH,GAAK,OACzCA,EAAMC,SAASA,SAASG,SADiB,EAE9BC,EAAqB,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,KAA5B,EAG1BC,GAAwBC,EAAAA,EAAAA,IACnC,CAACT,EAHyB,SAAAC,GAAK,OAAIA,EAAMS,OAAOA,MAAjB,IAI/B,SAACR,EAAUQ,GACT,OAAOR,EAASQ,QAAO,SAAAC,GAAO,OAC5BA,EAAQd,KAAKe,cAAcC,SAASH,EAAOE,cADf,GAG/B,I,oBCJGE,GAASC,EAAAA,EAAAA,IAAO,CACpBlB,MAAMmB,EAAAA,EAAAA,MACHC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,aACZC,QAAQA,EAAAA,EAAAA,IAAO,oBAAoBH,IAAI,EAAG,cAAcE,SAAS,eAGtDE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXrB,GAAWsB,EAAAA,EAAAA,IAAYxB,GAsB7B,OACE,SAAC,KAAD,CACEyB,cANkB,CACpB5B,KAAM,GACNuB,OAAQ,IAKNM,SAvBiB,SAACC,EAAD,IACnBC,EAD8C,EAAhBA,aAG5B1B,EAAS2B,MACP,qBAAGhC,KACWe,gBAAkBe,EAAO9B,KAAKe,aAD5C,IAIFkB,MAAM,GAAD,OAAIH,EAAO9B,KAAX,6BAGPyB,GAASS,EAAAA,EAAAA,IAAWJ,IAEpBK,QAAQC,IAAIN,GACb,EAUGO,iBAAkBpB,EAHpB,UAKE,UAAC,IAAD,CAAQqB,aAAa,MAArB,WACA,kBAAOC,QAAQ,OAAf,SAAsB,UACpB,4BACE,SAAC,IAAD,CAEEC,KAAK,OACLC,GAAG,OACHzC,KAAK,OACL0C,YAAY,iBACZC,MAAM,OAAOC,QAAQ,cAGvB,SAAC,EAAD,CAAW5C,KAAK,aAGlB,kBAAOuC,QAAQ,SAAf,SAAwB,YACxB,4BACE,SAAC,IAAD,CACEC,KAAK,MACLxC,KAAK,SACLyC,GAAG,SACHC,YAAY,oBAEd,SAAC,EAAD,CAAW1C,KAAK,eAGlB,SAAC6C,EAAA,EAAD,CAAQD,QAAQ,YAAYJ,KAAK,SAAjC,SAA0C,oBAMjD,E,UC9EYM,EAAOC,EAAAA,QAAAA,GAAH,uZCKJC,EAAc,WAEzB,IAAMvB,GAAWC,EAAAA,EAAAA,MAMXuB,GAAkBtB,EAAAA,EAAAA,IAAYhB,GAEpC,OACE,SAACmC,EAAD,UACG,CACCG,EAAgBC,KAAI,YAA2B,IAAxBT,EAAuB,EAAvBA,GAAIzC,EAAmB,EAAnBA,KAAMuB,EAAa,EAAbA,OAC/B,OACE,0BACGvB,EAAK,KAAGuB,GAET,SAACsB,EAAA,EAAD,CAAQD,QAAQ,YAAYO,QAAS,kBAdzBC,EAc+CX,OAbrEhB,GAAS4B,EAAAA,EAAAA,IAAcD,IADD,IAAAA,CAcyB,EAArC,SAAgE,aAHzDX,EAMZ,MAIR,E,UC9BY7C,EAAYmD,EAAAA,QAAAA,IAAH,0FCStB,EANmB,WACjB,IAAMrC,GAAQiB,EAAAA,EAAAA,IAAYlB,GAE1B,OADA0B,QAAQC,IAAI1B,IACL,UAAC,EAAD,WAAW,IAAEA,EAAMR,QAAQ,MACnC,E,UCNYoD,EAAaP,EAAAA,QAAAA,IAAH,2Y,oBCGVQ,EAAS,WACpB,IAAM9B,GAAWC,EAAAA,EAAAA,MAEjB,GAA4B8B,EAAAA,EAAAA,UAAS,IAArC,eAAO3C,EAAP,KAAe4C,EAAf,KAOA,OACE,SAACH,EAAD,WACE,SAACI,EAAA,EAAD,CACEpB,aAAa,MACbK,MAAM,wBACNC,QAAQ,WACRJ,KAAK,OACLC,GAAG,SACHzC,KAAK,SACL2D,MAAO9C,EACP+C,SAAU,SAAAC,GAAC,OAfGC,EAeaD,EAAEE,OAdjCN,EAAUK,EAAMH,YAEhBlC,GAASuC,EAAAA,EAAAA,GAAeF,EAAMH,QAHZ,IAAAG,CAeH,KAIlB,E,UC5BYG,EAAclB,EAAAA,QAAAA,IAAJ,6EAMVmB,EAAenB,EAAAA,QAAAA,IAAJ,4FCJXoB,EAAS,WAClB,OACE,UAACF,EAAD,YACE,SAACC,EAAD,UAAa,gBACb,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,oBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,OAAQ,CAAC,UAAW,eAI3B,E,UCjBUC,EAAY5B,EAAAA,QAAAA,GAAH,yFCAT6B,EAAgB,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC7B,OACE,SAACF,EAAD,UAAYE,GAEf,ECJYC,EAAQ/B,EAAAA,QAAAA,GAAH,yFCCLgC,EAAiB,SAAC,GAAa,IAAZF,EAAW,EAAXA,MAC5B,OACE,SAACC,EAAD,UAAQD,GAEX,ECqCH,EA9BkB,WAChB,IAAMpD,GAAWC,EAAAA,EAAAA,MACXlB,GAAYmB,EAAAA,EAAAA,IAAYpB,GACxBG,GAAQiB,EAAAA,EAAAA,IAAYlB,GAM1B,OAJAuE,EAAAA,EAAAA,YAAU,WACRvD,GAASwD,EAAAA,EAAAA,MACV,GAAE,CAACxD,KAGF,+BACE,2BACE,UAACyD,EAAA,EAAD,YACE,UAAC,IAAD,YACE,SAACH,EAAD,CAAgBF,MAAM,eACtB,SAACrD,EAAD,QAEF,UAAC,IAAD,YACE,SAACoD,EAAD,CAAeC,MAAM,cACrB,SAACtB,EAAD,KACA,SAACP,EAAD,IACCxC,IAAa,SAAC2D,EAAD,IACbzD,IAAS,SAAC,EAAD,aAMrB,C,mHCtCYyE,GAAUpC,EAAAA,EAAAA,SAAOqC,EAAAA,GAAPrC,CAAJ,+pBAqCNsC,GAAUtC,EAAAA,EAAAA,SAAOuC,EAAAA,GAAPvC,CAAH,0F,sECvCPwC,E,QAAUxC,QAAAA,QAAH,8D","sources":["components/FormError/FormError.styled.js","components/FormError/FormError.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ErrMessage/ErrMessage.styled.js","components/ErrMessage/ErrMessage.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","components/TitleContacts/TitleContacts.styled.js","components/TitleContacts/TitleContacts.jsx","components/TitlePhonebook/TitlePhonebook.styled.js","components/TitlePhonebook/TitlePhonebook.jsx","Page/Phonebook.jsx","components/ContactForm/ContactForm.styled.js","components/Section/Section.styled.js"],"sourcesContent":["const { default: styled } = require(\"styled-components\");\n\nexport const ErrorText = styled.span`\ncolor: red;\n`","import { ErrorMessage } from 'formik';\nimport { ErrorText } from './FormError.styled';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport default FormError;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactItems = state => state.contacts.contacts.items;\nexport const selectContactIsLoading = state =>\n  state.contacts.contacts.isLoading;\nexport const selectContactError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContactItems, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n","import { FieldEl, FormEl } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContacts } from 'redux/contactSlice';\nimport { Formik } from 'formik';\nimport { object, string, number } from 'yup';\nimport FormError from 'components/FormError/FormError';\nimport { selectContactItems } from 'redux/selectors';\nimport { addContact } from 'redux/operationsContacts';\nimport { Button } from '@mui/material';\n\nconst schema = object({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required!'),\n  number: number('must be a number').min(2, 'Too Short!').required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactItems);\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    if (\n      contacts.find(\n        ({ name: contactName }) =>\n          contactName.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n\n    console.log(values);\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormEl autoComplete=\"off\">\n      <label htmlFor=\"name\">Name</label>\n        <div>\n          <FieldEl\n            // as={TextField}\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter name ...\"\n            label=\"Name\" variant=\"outlined\"\n            />\n         \n          <FormError name=\"name\" />\n        </div>\n\n        <label htmlFor=\"number\">Number</label>\n        <div>\n          <FieldEl\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            placeholder=\"tel: xxx-xx-xx\"\n          />\n          <FormError name=\"number\" />\n        </div>\n        {/* <button type=\"submit\">Add contact</button> */}\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </FormEl>\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 30px;\ngap: 10px;\n\nli{\n    font-weight: 500;\n\n    button{\n       width: max-content;\n       padding: 5px 10px; \n       border-radius: 5px;\n       margin-left: 15px;\n       margin-bottom: 5px;\n       border: none;\n       box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2), 1px 1px 3px rgba(0, 0, 0, 0.2);\n      \n    }\n}\n`","import { Button } from '@mui/material';\nimport { List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operationsContacts';\nimport { selectVisibleContacts } from 'redux/selectors';\n\n\nexport const ContactList = () => {\n  \n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n \n  return (\n    <List>\n      {[\n        visibleContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id}>\n              {name}: {number}\n              {/* <button onClick={() => onDeleteContact(id)}>Delete</button> */}\n              <Button variant=\"contained\" onClick={() => onDeleteContact(id)}>Delete</Button>\n            </li>\n          );\n        }),\n      ]}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n   position: absolute;\n   top: 50%;\n   left: 50%;\ncolor: red;\n`","import React from 'react';\nimport { ErrorText } from './ErrMessage.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContactError } from 'redux/selectors';\n\nconst ErrMessage = () => {\n  const error = useSelector(selectContactError)\n  console.log(error)\n  return <ErrorText> {error.message} </ErrorText>;\n};\n\nexport default ErrMessage;\n","// import { TextField } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 15px;\n  width: 250px;\n  height: 26px;\n  margin-bottom: 50px;\n  outline: none;\n\n  label{\n    font-weight: 500;\n    margin-bottom: 5px;\n}\ninput{\n    font-size: 15px;\n    width: 250px;\n    height: 26px;\n    outline: none;  \n    border-radius: 5px;\n    background-color: #fff;\n \n}\n  \n`;\n","import React, { useState } from 'react';\nimport { FilterWrap } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState('');\n\n  const changeInput = input => {\n    setFilter(input.value);\n\n    dispatch(filterContacts(input.value));\n  };\n  return (\n    <FilterWrap>\n      <TextField\n        autoComplete=\"off\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => changeInput(e.target)}\n      />\n    </FilterWrap>\n  );\n};\n","import styled from 'styled-components'\n\nexport const LoaderWrap =  styled.div`\n   position: absolute;\n   top: 50%;\n   left: 50%;\n`\n\nexport const LoadMessage =  styled.div`\nmargin-bottom: 10px;\n    font-size: large;\n    font-weight: 500;\n`\n \n    \n","import { Hourglass } from  'react-loader-spinner'\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\n\nexport const Loader = () => {\n    return (\n      <LoaderWrap >\n        <LoadMessage>Loading...</LoadMessage>\n        <Hourglass\n          visible={true}\n          height=\"50\"\n          width=\"50\"\n          ariaLabel=\"hourglass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          colors={['#306cce', '#72a1ed']} \n        />\n      </LoaderWrap>\n    );\n  };","import styled from \"styled-components\";\n\nexport const TitleCont = styled.h2`\n  font-size: 32px;\n  font-weight: 500;\n  margin-bottom: 30px;\n`","import { TitleCont } from \"./TitleContacts.styled\"\n\nexport const TitleContacts = ({title}) => {\n  return (\n    <TitleCont>{title}</TitleCont>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  font-size: 40px;\n  font-weight: 600;\n  margin-bottom: 30px;\n`","import { Title } from \"./TitlePhonebook.styled\"\n\n\nexport const TitlePhonebook = ({title}) => {\n    return (\n      <Title>{title}</Title>\n    )\n  }","import { Container } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ErrMessage from 'components/ErrMessage/ErrMessage';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/loader';\nimport { Section } from 'components/Section/Section.styled';\nimport { TitleContacts } from 'components/TitleContacts/TitleContacts';\nimport { TitlePhonebook } from 'components/TitlePhonebook/TitlePhonebook';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operationsContacts';\nimport { selectContactError, selectContactIsLoading } from 'redux/selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectContactIsLoading);\n  const error = useSelector(selectContactError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <main>\n        <Container>\n          <Section>\n            <TitlePhonebook title=\"Phonebook\" />\n            <ContactForm />\n          </Section>\n          <Section>\n            <TitleContacts title=\"Contacts\" />\n            <Filter />\n            <ContactList />\n            {isLoading && <Loader />}\n            {error && <ErrMessage />}\n          </Section>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default Phonebook;","import styled from \"styled-components\";\nimport { Field, Form} from 'formik';\n\n\nexport const FormEl  = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nborder: 1px solid black;\nwidth: 500px;\npadding: 20px 15px;\nborder-radius: 8px;\nbackground-color: #fff;\ngap: 10px;\n\n\nlabel{\n    font-weight: 500;\n    margin-bottom: 5px;\n}\n/* input{\n    font-size: 15px;\n    width: 250px;\n    height: 26px;\n    margin-bottom: 30px;\n    outline: none;   \n    margin-right: 10px; */\n\n/*    \n    &:focus{\n        outline: 1px solid rgba(0, 255, 255);\n    } */\n  \n/* }   */\n\nbutton{\n       width: max-content;      \n       border-radius: 5px;      \n       box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2), 1px 1px 3px rgba(0, 0, 0, 0.2);\n       \n    }\n`\nexport const FieldEl = styled(Field)`\noutline: none;\nheight: 60px;\nmargin-right: 10px;\nwidth: 250px;\n`","import styled from \"styled-components\";\n\nexport const Section = styled.section`\npadding: 20px 0;\npadding-left: 50px;\n`"],"names":["ErrorText","require","default","span","name","render","message","selectContactItems","state","contacts","items","selectContactIsLoading","isLoading","selectContactError","error","selectVisibleContacts","createSelector","filter","contact","toLowerCase","includes","schema","object","string","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","onSubmit","values","resetForm","find","alert","addContact","console","log","validationSchema","autoComplete","htmlFor","type","id","placeholder","label","variant","Button","List","styled","ContactList","visibleContacts","map","onClick","contactId","deleteContact","FilterWrap","Filter","useState","setFilter","TextField","value","onChange","e","input","target","filterContacts","LoaderWrap","LoadMessage","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","TitleCont","TitleContacts","title","Title","TitlePhonebook","useEffect","fetchContacts","Container","FormEl","Form","FieldEl","Field","Section"],"sourceRoot":""}