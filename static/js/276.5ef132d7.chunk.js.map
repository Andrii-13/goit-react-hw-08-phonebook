{"version":3,"file":"static/js/276.5ef132d7.chunk.js","mappings":"qPASMA,GAASC,EAAAA,EAAAA,IAAO,CACpBC,MAAMC,EAAAA,EAAAA,MACHC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,aACZC,OAAOJ,EAAAA,EAAAA,MAASG,SAAS,aACzBE,UAAUL,EAAAA,EAAAA,MAASC,IAAI,EAAG,cAAcE,SAAS,eAsFnD,UAnFiB,WACf,IAAMG,GAAWC,EAAAA,EAAAA,MAOXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,KAAM,GACNK,MAAO,GACPC,SAAU,IAEZM,SAXmB,SAACC,EAAQC,GAC5BP,GAASQ,EAAAA,EAAAA,IAASF,GACnB,EAUCG,iBAAkBlB,IAKpB,OAFFmB,QAAQC,IAAIT,EAAOI,SAGf,2BACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,eAAIM,MAAO,CAAEC,UAAW,OAAQC,UAAW,SAAUC,MAAO,QAA5D,SAAsE,kBAGtE,kBAAMC,UAAW,OAAOC,aAAa,MAAMZ,SAAUH,EAAOgB,aAA5D,WACE,iBAAKF,UAAU,YAAf,WACE,SAAC,IAAD,CACEG,KAAK,OACLC,GAAG,OACH3B,KAAK,OACL4B,YAAY,iBACZC,MAAM,OACNC,QAAQ,WACRC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOI,OAAOb,OAEtBS,EAAOyB,QAAQlC,MAAQS,EAAO0B,OAAOnC,MACpC,gBAAKuB,UAAU,YAAf,SAA4Bd,EAAO0B,OAAOnC,OACxC,SAEN,iBAAKuB,UAAU,YAAf,WACE,SAAC,IAAD,CACEG,KAAK,QACLC,GAAG,QACH3B,KAAK,QACL4B,YAAY,mBACZC,MAAM,QACNC,QAAQ,WACRC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOI,OAAOR,QAEtBI,EAAOyB,QAAQ7B,OAASI,EAAO0B,OAAO9B,OACrC,gBAAKkB,UAAU,YAAf,SAA4Bd,EAAO0B,OAAO9B,QACxC,SAEN,iBAAKkB,UAAU,YAAf,WACE,SAAC,IAAD,CACEG,KAAK,WACLC,GAAG,WACH3B,KAAK,WACL4B,YAAY,qBACZC,MAAM,WACNC,QAAQ,WACRC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOI,OAAOP,WAEtBG,EAAOyB,QAAQ5B,UAAYG,EAAO0B,OAAO7B,UACxC,gBAAKiB,UAAU,YAAf,SAA4Bd,EAAO0B,OAAO7B,WACxC,SAEN,SAAC,IAAD,CAAQwB,QAAQ,YAAYJ,KAAK,SAAjC,SAA0C,0BAQrD,C","sources":["Page/Register/Register.jsx"],"sourcesContent":["import { Button, Container, TextField } from '@mui/material';\n// import { FieldEl, FormEl } from 'components/ContactForm/ContactForm.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { object, string } from 'yup';\n\nconst schema = object({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required!'),\n  email: string().required('Required!'),\n  password: string().min(2, 'Too Short!').required('Required!'),\n});\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n  };\n\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: handleSubmit,\n    validationSchema: schema,\n  });\n\nconsole.log(formik.values)\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <h1 style={{ marginTop: '40px', textAlign: 'center', color: 'gray' }}>\n            Registration\n          </h1>\n          <form className =\"form\" autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n            <div className=\"inputWrap\">\n              <TextField\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Enter name ...\"\n                label=\"Name\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              />\n              {formik.touched.name && formik.errors.name ? (\n                <div className=\"FormikErr\">{formik.errors.name}</div>\n              ) : null}\n            </div>\n            <div className=\"inputWrap\">\n              <TextField\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter e-mail ...\"\n                label=\"email\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n              />\n              {formik.touched.email && formik.errors.email ? (\n                <div className=\"FormikErr\">{formik.errors.email}</div>\n              ) : null}\n            </div>\n            <div className=\"inputWrap\">\n              <TextField\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password ...\"\n                label=\"password\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n              />\n              {formik.touched.password && formik.errors.password ? (\n                <div className=\"FormikErr\">{formik.errors.password}</div>\n              ) : null}\n            </div>\n            <Button variant=\"contained\" type=\"submit\">\n              registration\n            </Button>\n          </form>\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Register;\n"],"names":["schema","object","name","string","min","max","required","email","password","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","actions","register","validationSchema","console","log","style","marginTop","textAlign","color","className","autoComplete","handleSubmit","type","id","placeholder","label","variant","onChange","handleChange","value","touched","errors"],"sourceRoot":""}