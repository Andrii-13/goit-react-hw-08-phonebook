{"version":3,"file":"static/js/508.32b116fc.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ErrMessage/ErrMessage.styled.js","components/ErrMessage/ErrMessage.jsx","components/Filter/Filter.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","components/TitleContacts/TitleContacts.jsx","components/TitlePhonebook/TitlePhonebook.jsx","Page/Phonebook.jsx"],"sourcesContent":["// import { FieldEl, FormEl } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContacts } from 'redux/contactSlice';\n// import { Formik } from 'formik';\nimport { object, string, number } from 'yup';\n// import FormError from 'components/FormError/FormError';\nimport { selectContactItems } from 'redux/selectors';\nimport { addContact } from 'redux/operationsContacts';\nimport { Button, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\n\nconst schema = object({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required!'),\n  number: number('must be a number').min(2, 'Too Short!').required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactItems);\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    if (\n      contacts.find(\n        ({ name: contactName }) =>\n          contactName.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n\n    console.log(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    onSubmit: handleSubmit,\n    validationSchema: schema,\n  });\n\n  return (\n    <form className='form' autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n      <div className=\"inputWrap\">\n        <TextField\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Enter name ...\"\n          label=\"Name\"\n          variant=\"outlined\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        {formik.touched.name && formik.errors.name ? (\n          <div className=\"FormikErr\">{formik.errors.name}</div>\n        ) : null}\n      </div>\n      <div className=\"inputWrap\">\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Phone\"\n          id=\"number\"\n          placeholder=\"tel: xxx-xx-xx\"\n          onChange={formik.handleChange}\n          value={formik.values.number}\n        />\n        {formik.touched.number && formik.errors.number ? (\n          <div className=\"FormikErr\">{formik.errors.number}</div>\n        ) : null}\n      </div>\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 30px;\ngap: 10px;\n\nli{\n    font-weight: 500;\n\n    button{\n       width: max-content;\n       padding: 5px 10px; \n       border-radius: 5px;\n       margin-left: 15px;\n       margin-bottom: 5px;\n       border: none;\n       box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2), 1px 1px 3px rgba(0, 0, 0, 0.2);\n      \n    }\n}\n`","import { Button } from '@mui/material';\nimport { List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operationsContacts';\nimport { selectVisibleContacts } from 'redux/selectors';\n\n\nexport const ContactList = () => {\n  \n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n \n  return (\n    <List>\n      {[\n        visibleContacts.map(({ _id, name, number }) => {\n          return (\n            <li key={_id}>\n              {name}: {number}\n              {/* <button onClick={() => onDeleteContact(id)}>Delete</button> */}\n              <Button variant=\"contained\" onClick={() => onDeleteContact(_id)}>Delete</Button>\n            </li>\n          );\n        }),\n      ]}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n   position: absolute;\n   top: 50%;\n   left: 50%;\ncolor: red;\n`","import React from 'react';\nimport { ErrorText } from './ErrMessage.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContactError } from 'redux/selectors';\n\nconst ErrMessage = () => {\n  const error = useSelector(selectContactError)\n  console.log(error)\n  return <ErrorText> {error.message} </ErrorText>;\n};\n\nexport default ErrMessage;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState('');\n\n  const changeInput = input => {\n    setFilter(input.value);\n\n    dispatch(filterContacts(input.value));\n  };\n  return (\n    <form className='inputWrap'>\n      <TextField\n        autoComplete=\"off\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => changeInput(e.target)}\n      />\n    </form>\n  );\n};\n","import styled from 'styled-components'\n\nexport const LoaderWrap =  styled.div`\n   position: absolute;\n   top: 50%;\n   left: 50%;\n`\n\nexport const LoadMessage =  styled.div`\nmargin-bottom: 10px;\n    font-size: large;\n    font-weight: 500;\n`\n \n    \n","import { Hourglass } from  'react-loader-spinner'\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\n\nexport const Loader = () => {\n    return (\n      <LoaderWrap >\n        <LoadMessage>Loading...</LoadMessage>\n        <Hourglass\n          visible={true}\n          height=\"50\"\n          width=\"50\"\n          ariaLabel=\"hourglass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          colors={['#306cce', '#72a1ed']} \n        />\n      </LoaderWrap>\n    );\n  };","export const TitleContacts = ({title}) => {\n  return (\n    <h2>{title}</h2>\n  )\n}\n","\nexport const TitlePhonebook = ({title}) => {\n    return (\n      <h1>{title}</h1>\n    )\n  }","import { Container } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ErrMessage from 'components/ErrMessage/ErrMessage';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/loader';\nimport { Section } from 'components/Section/Section.styled';\nimport { TitleContacts } from 'components/TitleContacts/TitleContacts';\nimport { TitlePhonebook } from 'components/TitlePhonebook/TitlePhonebook';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operationsContacts';\nimport { selectContactError, selectContactIsLoading } from 'redux/selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectContactIsLoading);\n  const error = useSelector(selectContactError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <main>\n        <Container>\n          <Section>\n            <TitlePhonebook title=\"Phonebook\" />\n            <ContactForm />\n          </Section>\n          <Section>\n            <TitleContacts title=\"Contacts\" />\n            <Filter />\n            <ContactList />\n            {isLoading && <Loader />}\n            {error && <ErrMessage />}\n          </Section>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default Phonebook;"],"names":["schema","object","name","string","min","max","required","number","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContactItems","formik","useFormik","initialValues","onSubmit","values","resetForm","find","toLowerCase","alert","addContact","console","log","validationSchema","className","autoComplete","handleSubmit","TextField","type","id","placeholder","label","variant","onChange","handleChange","value","touched","errors","Button","List","styled","ContactList","visibleContacts","selectVisibleContacts","map","_id","onClick","contactId","deleteContact","ErrorText","error","selectContactError","message","Filter","useState","filter","setFilter","e","input","target","filterContacts","LoaderWrap","LoadMessage","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","TitleContacts","title","TitlePhonebook","isLoading","selectContactIsLoading","useEffect","fetchContacts","Container"],"sourceRoot":""}